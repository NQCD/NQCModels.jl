"""
It is a test file for developing the Anderson-Holstein model (Newns-Anderson Hamiltonian).
"""


using Test
using NQCModels
using LinearAlgebra
""" The tests generated by James Gardner 
m = ErpenbeckThoss(;Γ=0.1)
b = TrapezoidalRule(10, -10, 10)
@testset "nelectrons" begin
    model = AndersonHolstein(m, b) # fermilevel defaults to zero
    @test NQCModels.nelectrons(model) == 5

    for (n, f) in zip([1, 6, 10], [-10, 2, 10])
        model = AndersonHolstein(m, b; fermi_level=f)
        @test NQCModels.nelectrons(model) == n
    end
end
"""
## Test by Hokseon

m = ErpenbeckThoss(;Γ=0.1)

# discretise the bath
bath_T = TrapezoidalRule(10, -10, 10)
bath_L = ShenviGaussLegendre(10, -10, 10)

model = AndersonHolstein(m, bath_L) # fermilevel defaults to zero


#V = NQCModels.potential!(model, Hermitian(zeros(11,11)), zeros(1,1))

#@info "The potential matrix V"
#display(V)

"""
    In this part, we will focus on the derivative compulation for the potential matrix.

    model :AndersonHolstein
    M :Matrix{Hermitian{Float64, Matrix{Float64}}}
    zeros(1,1) : derivative evaluated at the position r

"""

# M is 1×1 Matrix{Hermitian{Float64, Matrix{Float64}}}:
M = Matrix{Hermitian{Float64, Matrix{Float64}}}(undef, 1, 1)
M[1] = Hermitian(zeros(2,2))

D = NQCModels.derivative!(model, M, zeros(1,1))
